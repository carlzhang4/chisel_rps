#include "debug.hpp"

void print_reporters_bs(volatile uint32_t *bar){
	printf("roce.io.s_tx_meta.[fire]                                    :%ud\n", bar[100]);
	printf("roce.io.qp_init.[fire]                                      :%ud\n", bar[101]);
	printf("roce.io.s_send_data.[fire]                                  :%ud\n", bar[102]);
	printf("roce.io.s_send_data.[fire]                                  :%ud\n", bar[103]);
	printf("roce.io.m_recv_data.[fire]                                  :%ud\n", bar[104]);
	printf("roce.io.m_recv_data.[fire]                                  :%ud\n", bar[105]);
	printf("roce.io.m_net_tx_data.[fire]                                :%ud\n", bar[106]);
	printf("roce.io.s_net_rx_data.[fire]                                :%ud\n", bar[107]);
	printf("roce.tx_pkg_route.io.pkg_info.[fire]                        :%ud\n", bar[108]);
	printf("roce.tx_exh_generate.io.event_in.[fire]                     :%ud\n", bar[109]);
	printf("roce.tx_exh_generate.io.ibh_meta_out.[fire]                 :%ud\n", bar[110]);
	printf("roce.tx_exh_generate.io.pkg_type2exh.[fire]                 :%ud\n", bar[111]);
	printf("roce.tx_exh_generate.io.head_data_out.[fire]                :%ud\n", bar[112]);
	printf("roce.tx_add_ibh.io.ibh_header_in.[fire]                     :%ud\n", bar[113]);
	printf("roce.tx_add_ibh.io.exh_data_in.[fire]                       :%ud\n", bar[114]);
	printf("roce.tx_add_ibh.io.tx_data_out.[fire]                       :%ud\n", bar[115]);
	printf("roce.tx_ibh_fsm.io.ibh_meta_in.[fire]                       :%ud\n", bar[116]);
	printf("roce.tx_ibh_fsm.io.udpip_meta_out.[fire]                    :%ud\n", bar[117]);
	printf("roce.tx_ibh_fsm.io.head_data_out.[fire]                     :%ud\n", bar[118]);
	printf("roce.rx_exh_payload.io.rx_ibh_data_in.[fire]                :%ud\n", bar[119]);
	printf("roce.rx_mem_payload.io.m_recv_data.[fire]                   :%ud\n", bar[120]);
	printf("roce.rx_mem_payload.io.m_mem_write_data.[fire]              :%ud\n", bar[121]);
	printf("roce.rx_exh_fsm.io.msn2rx_rsp.[fire]                        :%ud\n", bar[122]);
	printf("roce.event_merge.io.rx_ack_event.[fire]                     :%ud\n", bar[123]);
	printf("roce.event_merge.io.credit_ack_event.[fire]                 :%ud\n", bar[124]);
	printf("roce.event_merge.io.remote_read_event.[fire]                :%ud\n", bar[125]);
	printf("roce.event_merge.io.tx_local_event.[fire]                   :%ud\n", bar[126]);
	printf("roce.event_merge.io.tx_exh_event.[fire]                     :%ud\n", bar[127]);
	printf("roce.event_merge.io.m_mem_read_cmd.[fire]                   :%ud\n", bar[128]);
	printf("roce.event_merge.io.pkg_info.[fire]                         :%ud\n", bar[129]);
	printf("roce.msn_table.io.rx2msn_req.[fire]                         :%ud\n", bar[130]);
	printf("bench.qdma_control.reg_max                                  :%ud\n", bar[131]);
	printf("bench.qdma_control.io.axi.aw.[fire]                         :%ud\n", bar[132]);
	printf("bench.qdma_control.io.axi.w.[fire]                          :%ud\n", bar[133]);
	printf("bench.client_req_handler.io.recv_meta.[fire]                :%ud\n", bar[134]);
	printf("bench.client_req_handler.io.recv_data.[fire]                :%ud\n", bar[135]);
	printf("bench.client_req_handler.io.recv_data.[fireLast]            :%ud\n", bar[136]);
	printf("bench.client_req_handler.io.meta2host.[fire]                :%ud\n", bar[137]);
	printf("bench.client_req_handler.io.data2host.[fire]                :%ud\n", bar[138]);
	printf("bench.client_req_handler.io.data2host.[fireLast]            :%ud\n", bar[139]);
	printf("bench.client_req_handler.io.meta_from_host.[fire]           :%ud\n", bar[140]);
	printf("bench.client_req_handler.io.send_meta.[fire]                :%ud\n", bar[141]);
	printf("bench.client_req_handler.io.send_data.[fire]                :%ud\n", bar[142]);
	printf("bench.client_req_handler.io.send_data.[fireLast]            :%ud\n", bar[143]);
	printf("bench.cs_req_handler.io.recv_meta.[fire]                    :%ud\n", bar[144]);
	printf("bench.cs_req_handler.io.recv_data.[fire]                    :%ud\n", bar[145]);
	printf("bench.cs_req_handler.io.recv_data.[fireLast]                :%ud\n", bar[146]);
	printf("bench.cs_req_handler.io.meta2host.[fire]                    :%ud\n", bar[147]);
	printf("bench.cs_req_handler.io.data2host.[fire]                    :%ud\n", bar[148]);
	printf("bench.cs_req_handler.io.data2host.[fireLast]                :%ud\n", bar[149]);
	printf("bench.cs_req_handler.io.meta_from_host.[fire]               :%ud\n", bar[150]);
	printf("bench.cs_req_handler.io.send_meta.[fire]                    :%ud\n", bar[151]);
	printf("bench.cs_req_handler.io.send_data.[fire]                    :%ud\n", bar[152]);
	printf("bench.cs_req_handler.io.send_data.[fireLast]                :%ud\n", bar[153]);
	// Report width 1:
	printf("qdma.check_c2h.<boundary check state===sIDLE>               :%ud\n", (bar[154] >> 0) & 1);
	printf("qdma.check_h2c.<boundary check state===sIDLE>               :%ud\n", (bar[154] >> 1) & 1);
	printf("qdma.boundary_split.<boundary split state===sIDLE>          :%ud\n", (bar[154] >> 2) & 1);
	printf("qdma.fifo_c2h_cmd.io.out.valid                              :%ud\n", (bar[154] >> 3) & 1);
	printf("qdma.fifo_c2h_cmd.io.out.ready                              :%ud\n", (bar[154] >> 4) & 1);
	printf("qdma.fifo_h2c_cmd.io.out.valid                              :%ud\n", (bar[154] >> 5) & 1);
	printf("qdma.fifo_h2c_cmd.io.out.ready                              :%ud\n", (bar[154] >> 6) & 1);
	printf("qdma.fifo_c2h_data.io.out.valid                             :%ud\n", (bar[154] >> 7) & 1);
	printf("qdma.fifo_c2h_data.io.out.ready                             :%ud\n", (bar[154] >> 8) & 1);
	printf("qdma.fifo_h2c_data.io.in.valid                              :%ud\n", (bar[154] >> 9) & 1);
	printf("qdma.fifo_h2c_data.io.in.ready                              :%ud\n", (bar[154] >> 10) & 1);
	printf("roce.io.m_recv_data.ready                                   :%ud\n", (bar[154] >> 11) & 1);
	printf("roce.io.m_recv_data.valid                                   :%ud\n", (bar[154] >> 12) & 1);
	printf("roce.io.m_recv_meta.ready                                   :%ud\n", (bar[154] >> 13) & 1);
	printf("roce.io.m_recv_meta.valid                                   :%ud\n", (bar[154] >> 14) & 1);
	printf("roce.tx_pkg_route.io.s_send_data.ready                      :%ud\n", (bar[154] >> 15) & 1);
	printf("roce.tx_pkg_route.io.reth_data_out.ready                    :%ud\n", (bar[154] >> 16) & 1);
	printf("roce.tx_pkg_route.io.aeth_data_out.ready                    :%ud\n", (bar[154] >> 17) & 1);
	printf("roce.tx_pkg_route.io.raw_data_out.ready                     :%ud\n", (bar[154] >> 18) & 1);
	printf("roce.tx_pkg_route.<TX_MEM_PAYLOAD===sIDLE>                  :%ud\n", (bar[154] >> 19) & 1);
	printf("roce.reth_lshift.fifo_data.<overflow>                       :%ud\n", (bar[154] >> 20) & 1);
	printf("roce.aeth_lshift.fifo_data.<overflow>                       :%ud\n", (bar[154] >> 21) & 1);
	printf("roce.tx_append_exh.<TX_ADD_EXH===sIDLE>                     :%ud\n", (bar[154] >> 22) & 1);
	printf("roce.tx_exh_generate.<TX_EXH_FSM===sIDLE>                   :%ud\n", (bar[154] >> 23) & 1);
	printf("roce.ibh_lshift.fifo_data.<overflow>                        :%ud\n", (bar[154] >> 24) & 1);
	printf("roce.tx_add_ibh.<TX_ADD_IBH===sIDLE>                        :%ud\n", (bar[154] >> 25) & 1);
	printf("roce.tx_ibh_fsm.<TX_IBH_FSM===sIDLE>                        :%ud\n", (bar[154] >> 26) & 1);
	printf("roce.udp_lshift.fifo_data.<overflow>                        :%ud\n", (bar[154] >> 27) & 1);
	printf("roce.tx_add_udp.<TX_ADD_UDP===sIDLE>                        :%ud\n", (bar[154] >> 28) & 1);
	printf("roce.ip_lshift.fifo_data.<overflow>                         :%ud\n", (bar[154] >> 29) & 1);
	printf("roce.tx_add_ip.<TX_ADD_IP===sIDLE>                          :%ud\n", (bar[154] >> 30) & 1);
	printf("roce.rx_exh_payload.<RX_EXH_PAYLOAD===sIDLE>                :%ud\n", (bar[154] >> 31) & 1);
	printf("roce.reth_rshift.fifo_data.<overflow>                       :%ud\n", (bar[155] >> 0) & 1);
	printf("roce.aeth_rshift.fifo_data.<overflow>                       :%ud\n", (bar[155] >> 1) & 1);
	printf("roce.rx_mem_payload.<RX_MEM_PAYLOAD===sIDLE>                :%ud\n", (bar[155] >> 2) & 1);
	printf("roce.rx_mem_payload.last_err<RX_MEM_PAYLOAD::last_err>      :%ud\n", (bar[155] >> 3) & 1);
	printf("roce.rx_data_buffer.<overflow>                              :%ud\n", (bar[155] >> 4) & 1);
	printf("roce.<rx_data_buffer_almost_full>                           :%ud\n", (bar[155] >> 5) & 1);
	printf("roce.rx_exh_fsm.<RX_EXH_FSM===sIDLE>                        :%ud\n", (bar[155] >> 6) & 1);
	printf("roce.rx_exh_fsm.consume_read_addr                           :%ud\n", (bar[155] >> 7) & 1);
	printf("roce.rx_exh_fsm.io.pkg_type2exh.ready                       :%ud\n", (bar[155] >> 8) & 1);
	printf("roce.rx_exh_fsm.io.pkg_type2mem.ready                       :%ud\n", (bar[155] >> 9) & 1);
	printf("roce.rx_exh_fsm.io.ack_event.ready                          :%ud\n", (bar[155] >> 10) & 1);
	printf("roce.rx_exh_fsm.io.m_mem_write_cmd.ready                    :%ud\n", (bar[155] >> 11) & 1);
	printf("roce.rx_exh_fsm.io.m_recv_meta.ready                        :%ud\n", (bar[155] >> 12) & 1);
	printf("roce.rx_exh_fsm.io.rx2fc_req.ready                          :%ud\n", (bar[155] >> 13) & 1);
	printf("roce.rx_exh_fsm.io.r_read_req_req.ready                     :%ud\n", (bar[155] >> 14) & 1);
	printf("roce.rx_drop_pkg.<RX_DROP_PKG===sIDLE>                      :%ud\n", (bar[155] >> 15) & 1);
	printf("roce.rx_exh_process.<RX_EXH_PROCESS===sIDLE>                :%ud\n", (bar[155] >> 16) & 1);
	printf("roce.ibh_rshift.fifo_data.<overflow>                        :%ud\n", (bar[155] >> 17) & 1);
	printf("roce.rx_ibh_process.<RX_IBH_PROCESS===sIDLE>                :%ud\n", (bar[155] >> 18) & 1);
	printf("roce.rx_ibh_fsm.<RX_IBH_FSM===sIDLE>                        :%ud\n", (bar[155] >> 19) & 1);
	printf("roce.rx_ibh_fsm.psn_err                                     :%ud\n", (bar[155] >> 20) & 1);
	printf("roce.udp_rshift.fifo_data.<overflow>                        :%ud\n", (bar[155] >> 21) & 1);
	printf("roce.rx_udp_process.<RX_UDP_PROCESS===sIDLE>                :%ud\n", (bar[155] >> 22) & 1);
	printf("roce.ip_rshift.fifo_data.<overflow>                         :%ud\n", (bar[155] >> 23) & 1);
	printf("roce.rx_ip_process.<RX_IP_PROCESS===sIDLE>                  :%ud\n", (bar[155] >> 24) & 1);
	printf("roce.rx_ip_buffer.<overflow>                                :%ud\n", (bar[155] >> 25) & 1);
	printf("roce.event_merge.overflow<rx_ack_overflow>                  :%ud\n", (bar[155] >> 26) & 1);
	printf("roce.event_merge.overflow_1<tx_local_overflow>              :%ud\n", (bar[155] >> 27) & 1);
	printf("roce.remote_read_handler.<HANDLE_READ_REQ===sIDLE>          :%ud\n", (bar[155] >> 28) & 1);
	printf("roce.rdma_cmd_handler.<LOCAL_CMD_HANDLER===sIDLE>           :%ud\n", (bar[155] >> 29) & 1);
	printf("roce.credit_judge.<CREDIT_JUDGE===sIDLE>                    :%ud\n", (bar[155] >> 30) & 1);
	printf("roce.qp_init.qp_init_fifo.<overflow>                        :%ud\n", (bar[155] >> 31) & 1);
	printf("roce.msn_table.<MSN_TABLE===sIDLE>                          :%ud\n", (bar[156] >> 0) & 1);
	printf("roce.local_read_vaddr_q.free_list.<overflow>                :%ud\n", (bar[156] >> 1) & 1);
	printf("roce.local_read_vaddr_q.<MULTI_Q===sIDLE>                   :%ud\n", (bar[156] >> 2) & 1);
	printf("roce.conn_table.<CONN_TABLE===sIDLE>                        :%ud\n", (bar[156] >> 3) & 1);
	printf("roce.fc_table.<FC_TABLE===sIDLE>                            :%ud\n", (bar[156] >> 4) & 1);
	printf("roce.cq_table.dir_wq_fifo.<overflow>                        :%ud\n", (bar[156] >> 5) & 1);
	printf("roce.cq_table.rq_fifo.<overflow>                            :%ud\n", (bar[156] >> 6) & 1);
	printf("roce.cq_table.init_fifo.<overflow>                          :%ud\n", (bar[156] >> 7) & 1);
	printf("roce.cq_table.<CQ_TABLE===sIDLE>                            :%ud\n", (bar[156] >> 8) & 1);

}

void print_reporters_client(volatile uint32_t *bar){
	printf("roce.io.s_tx_meta.[fire]                                    :%ud\n", bar[100]);
	printf("roce.io.qp_init.[fire]                                      :%ud\n", bar[101]);
	printf("roce.io.s_send_data.[fire]                                  :%ud\n", bar[102]);
	printf("roce.io.s_send_data.[fire]                                  :%ud\n", bar[103]);
	printf("roce.io.m_recv_data.[fire]                                  :%ud\n", bar[104]);
	printf("roce.io.m_recv_data.[fire]                                  :%ud\n", bar[105]);
	printf("roce.io.m_net_tx_data.[fire]                                :%ud\n", bar[106]);
	printf("roce.io.s_net_rx_data.[fire]                                :%ud\n", bar[107]);
	printf("roce.tx_pkg_route.io.pkg_info.[fire]                        :%ud\n", bar[108]);
	printf("roce.tx_exh_generate.io.event_in.[fire]                     :%ud\n", bar[109]);
	printf("roce.tx_exh_generate.io.ibh_meta_out.[fire]                 :%ud\n", bar[110]);
	printf("roce.tx_exh_generate.io.pkg_type2exh.[fire]                 :%ud\n", bar[111]);
	printf("roce.tx_exh_generate.io.head_data_out.[fire]                :%ud\n", bar[112]);
	printf("roce.tx_add_ibh.io.ibh_header_in.[fire]                     :%ud\n", bar[113]);
	printf("roce.tx_add_ibh.io.exh_data_in.[fire]                       :%ud\n", bar[114]);
	printf("roce.tx_add_ibh.io.tx_data_out.[fire]                       :%ud\n", bar[115]);
	printf("roce.tx_ibh_fsm.io.ibh_meta_in.[fire]                       :%ud\n", bar[116]);
	printf("roce.tx_ibh_fsm.io.udpip_meta_out.[fire]                    :%ud\n", bar[117]);
	printf("roce.tx_ibh_fsm.io.head_data_out.[fire]                     :%ud\n", bar[118]);
	printf("roce.rx_exh_payload.io.rx_ibh_data_in.[fire]                :%ud\n", bar[119]);
	printf("roce.rx_mem_payload.io.m_recv_data.[fire]                   :%ud\n", bar[120]);
	printf("roce.rx_mem_payload.io.m_mem_write_data.[fire]              :%ud\n", bar[121]);
	printf("roce.rx_exh_fsm.io.msn2rx_rsp.[fire]                        :%ud\n", bar[122]);
	printf("roce.event_merge.io.rx_ack_event.[fire]                     :%ud\n", bar[123]);
	printf("roce.event_merge.io.credit_ack_event.[fire]                 :%ud\n", bar[124]);
	printf("roce.event_merge.io.remote_read_event.[fire]                :%ud\n", bar[125]);
	printf("roce.event_merge.io.tx_local_event.[fire]                   :%ud\n", bar[126]);
	printf("roce.event_merge.io.tx_exh_event.[fire]                     :%ud\n", bar[127]);
	printf("roce.event_merge.io.m_mem_read_cmd.[fire]                   :%ud\n", bar[128]);
	printf("roce.event_merge.io.pkg_info.[fire]                         :%ud\n", bar[129]);
	printf("roce.msn_table.io.rx2msn_req.[fire]                         :%ud\n", bar[130]);
	printf("clientAndCS.client.io.send_meta.[fire]                      :%ud\n", bar[131]);
	printf("clientAndCS.client.io.send_data.[fire]                      :%ud\n", bar[132]);
	printf("clientAndCS.client.io.send_data.[fireLast]                  :%ud\n", bar[133]);
	printf("clientAndCS.client.io.recv_meta.[fire]                      :%ud\n", bar[134]);
	printf("clientAndCS.client.io.recv_data.[fire]                      :%ud\n", bar[135]);
	printf("clientAndCS.client.io.recv_data.[fireLast]                  :%ud\n", bar[136]);
	printf("clientAndCS.client.reg_time[high]                           :%ud\n", bar[137]);
	printf("clientAndCS.client.reg_time[low]                            :%ud\n", bar[138]);
	printf("clientAndCS.client.reg_latency[high]                        :%ud\n", bar[139]);
	printf("clientAndCS.client.reg_latency[low]                         :%ud\n", bar[140]);
	printf("clientAndCS.cs.io.send_meta.[fire]                          :%ud\n", bar[141]);
	printf("clientAndCS.cs.io.send_data.[fire]                          :%ud\n", bar[142]);
	printf("clientAndCS.cs.io.send_data.[fireLast]                      :%ud\n", bar[143]);
	printf("clientAndCS.cs.io.recv_meta.[fire]                          :%ud\n", bar[144]);
	printf("clientAndCS.cs.io.recv_data.[fire]                          :%ud\n", bar[145]);
	printf("clientAndCS.cs.io.recv_data.[fireLast]                      :%ud\n", bar[146]);
	printf("clientAndCS.arbiter.io.out_meta.[fire]                      :%ud\n", bar[147]);
	printf("clientAndCS.arbiter.io.out_data.[fire]                      :%ud\n", bar[148]);
	printf("clientAndCS.router.io.in_meta.[fire]                        :%ud\n", bar[149]);
	printf("clientAndCS.router.io.in_data.[fire]                        :%ud\n", bar[150]);
	// Report width 1:
	printf("qdma.check_c2h.<boundary check state===sIDLE>               :%ud\n", (bar[151] >> 0) & 1);
	printf("qdma.check_h2c.<boundary check state===sIDLE>               :%ud\n", (bar[151] >> 1) & 1);
	printf("qdma.boundary_split.<boundary split state===sIDLE>          :%ud\n", (bar[151] >> 2) & 1);
	printf("qdma.fifo_c2h_cmd.io.out.valid                              :%ud\n", (bar[151] >> 3) & 1);
	printf("qdma.fifo_c2h_cmd.io.out.ready                              :%ud\n", (bar[151] >> 4) & 1);
	printf("qdma.fifo_h2c_cmd.io.out.valid                              :%ud\n", (bar[151] >> 5) & 1);
	printf("qdma.fifo_h2c_cmd.io.out.ready                              :%ud\n", (bar[151] >> 6) & 1);
	printf("qdma.fifo_c2h_data.io.out.valid                             :%ud\n", (bar[151] >> 7) & 1);
	printf("qdma.fifo_c2h_data.io.out.ready                             :%ud\n", (bar[151] >> 8) & 1);
	printf("qdma.fifo_h2c_data.io.in.valid                              :%ud\n", (bar[151] >> 9) & 1);
	printf("qdma.fifo_h2c_data.io.in.ready                              :%ud\n", (bar[151] >> 10) & 1);
	printf("roce.io.m_recv_data.ready                                   :%ud\n", (bar[151] >> 11) & 1);
	printf("roce.io.m_recv_data.valid                                   :%ud\n", (bar[151] >> 12) & 1);
	printf("roce.io.m_recv_meta.ready                                   :%ud\n", (bar[151] >> 13) & 1);
	printf("roce.io.m_recv_meta.valid                                   :%ud\n", (bar[151] >> 14) & 1);
	printf("roce.tx_pkg_route.io.s_send_data.ready                      :%ud\n", (bar[151] >> 15) & 1);
	printf("roce.tx_pkg_route.io.reth_data_out.ready                    :%ud\n", (bar[151] >> 16) & 1);
	printf("roce.tx_pkg_route.io.aeth_data_out.ready                    :%ud\n", (bar[151] >> 17) & 1);
	printf("roce.tx_pkg_route.io.raw_data_out.ready                     :%ud\n", (bar[151] >> 18) & 1);
	printf("roce.tx_pkg_route.<TX_MEM_PAYLOAD===sIDLE>                  :%ud\n", (bar[151] >> 19) & 1);
	printf("roce.tx_append_exh.<TX_ADD_EXH===sIDLE>                     :%ud\n", (bar[151] >> 20) & 1);
	printf("roce.tx_exh_generate.<TX_EXH_FSM===sIDLE>                   :%ud\n", (bar[151] >> 21) & 1);
	printf("roce.tx_add_ibh.<TX_ADD_IBH===sIDLE>                        :%ud\n", (bar[151] >> 22) & 1);
	printf("roce.tx_ibh_fsm.<TX_IBH_FSM===sIDLE>                        :%ud\n", (bar[151] >> 23) & 1);
	printf("roce.tx_add_udp.<TX_ADD_UDP===sIDLE>                        :%ud\n", (bar[151] >> 24) & 1);
	printf("roce.tx_add_ip.<TX_ADD_IP===sIDLE>                          :%ud\n", (bar[151] >> 25) & 1);
	printf("roce.rx_exh_payload.<RX_EXH_PAYLOAD===sIDLE>                :%ud\n", (bar[151] >> 26) & 1);
	printf("roce.rx_mem_payload.<RX_MEM_PAYLOAD===sIDLE>                :%ud\n", (bar[151] >> 27) & 1);
	printf("roce.rx_mem_payload.last_err<RX_MEM_PAYLOAD::last_err>      :%ud\n", (bar[151] >> 28) & 1);
	printf("roce.<rx_data_buffer_almost_full>                           :%ud\n", (bar[151] >> 29) & 1);
	printf("roce.rx_exh_fsm.<RX_EXH_FSM===sIDLE>                        :%ud\n", (bar[151] >> 30) & 1);
	printf("roce.rx_exh_fsm.consume_read_addr                           :%ud\n", (bar[151] >> 31) & 1);
	printf("roce.rx_exh_fsm.io.pkg_type2exh.ready                       :%ud\n", (bar[152] >> 0) & 1);
	printf("roce.rx_exh_fsm.io.pkg_type2mem.ready                       :%ud\n", (bar[152] >> 1) & 1);
	printf("roce.rx_exh_fsm.io.ack_event.ready                          :%ud\n", (bar[152] >> 2) & 1);
	printf("roce.rx_exh_fsm.io.m_mem_write_cmd.ready                    :%ud\n", (bar[152] >> 3) & 1);
	printf("roce.rx_exh_fsm.io.m_recv_meta.ready                        :%ud\n", (bar[152] >> 4) & 1);
	printf("roce.rx_exh_fsm.io.rx2fc_req.ready                          :%ud\n", (bar[152] >> 5) & 1);
	printf("roce.rx_exh_fsm.io.r_read_req_req.ready                     :%ud\n", (bar[152] >> 6) & 1);
	printf("roce.rx_drop_pkg.<RX_DROP_PKG===sIDLE>                      :%ud\n", (bar[152] >> 7) & 1);
	printf("roce.rx_exh_process.<RX_EXH_PROCESS===sIDLE>                :%ud\n", (bar[152] >> 8) & 1);
	printf("roce.rx_ibh_process.<RX_IBH_PROCESS===sIDLE>                :%ud\n", (bar[152] >> 9) & 1);
	printf("roce.rx_ibh_fsm.<RX_IBH_FSM===sIDLE>                        :%ud\n", (bar[152] >> 10) & 1);
	printf("roce.rx_ibh_fsm.psn_err                                     :%ud\n", (bar[152] >> 11) & 1);
	printf("roce.rx_udp_process.<RX_UDP_PROCESS===sIDLE>                :%ud\n", (bar[152] >> 12) & 1);
	printf("roce.rx_ip_process.<RX_IP_PROCESS===sIDLE>                  :%ud\n", (bar[152] >> 13) & 1);
	printf("roce.event_merge.overflow<rx_ack_overflow>                  :%ud\n", (bar[152] >> 14) & 1);
	printf("roce.event_merge.overflow_1<tx_local_overflow>              :%ud\n", (bar[152] >> 15) & 1);
	printf("roce.remote_read_handler.<HANDLE_READ_REQ===sIDLE>          :%ud\n", (bar[152] >> 16) & 1);
	printf("roce.rdma_cmd_handler.<LOCAL_CMD_HANDLER===sIDLE>           :%ud\n", (bar[152] >> 17) & 1);
	printf("roce.credit_judge.<CREDIT_JUDGE===sIDLE>                    :%ud\n", (bar[152] >> 18) & 1);
	printf("roce.msn_table.<MSN_TABLE===sIDLE>                          :%ud\n", (bar[152] >> 19) & 1);
	printf("roce.local_read_vaddr_q.<MULTI_Q===sIDLE>                   :%ud\n", (bar[152] >> 20) & 1);
	printf("roce.conn_table.<CONN_TABLE===sIDLE>                        :%ud\n", (bar[152] >> 21) & 1);
	printf("roce.fc_table.<FC_TABLE===sIDLE>                            :%ud\n", (bar[152] >> 22) & 1);
	printf("roce.cq_table.<CQ_TABLE===sIDLE>                            :%ud\n", (bar[152] >> 23) & 1);
	printf("clientAndCS.client.<test_0>                                 :%ud\n", (bar[152] >> 24) & 1);
	printf("clientAndCS.client.<test_1>                                 :%ud\n", (bar[152] >> 25) & 1);

}